{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAuB9C,OACI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAI3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCTlBG,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC/B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAECG,MAAMR,GAFP,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRhB,MAAMe,EAAIf,MACVC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNlB,EAAQC,GACPkB,MAAK,SAAAP,GACFK,EAAS,CACLV,KAAKK,EACLG,SAAQ,SAGjB,CAACd,IAEGe,EDZ4BI,CAAanB,GAAhCW,EAHmB,EAGxBL,KAAaQ,EAHW,EAGXA,QAGxB,OACI,qCACA,oBAAIlB,UAAU,oCAAd,SAAmDI,IAEnD,sBAAKJ,UAAU,YAAf,UACKkB,GAAW,wCACPH,EAAOH,KAAI,SAAAY,GACR,OACA,cAAC,EAAD,eAEIA,GADCA,EAAMV,cEflBW,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,yBAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAKA,6BAEQ2C,EAAWd,KAAI,SAAAR,GACX,OACI,cAAC,EAAD,CACAA,SAAUA,GACLA,Y,MClBjCuB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0e4f59a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n//no se usa props sino que se pasa la propiedad y se desestructura con {}\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            // llamamos a setCategories que ya fue desestructurada\r\n            //cats es el acceso a los valores que ya tenia el setState no hace falta pasarlos sono pasar el set y llamandolo...\r\n            //...de esa manera setX(values => [values, newValue])\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=owCctP4RrIZzuqISLMAFpQnngdovdzYL`;\r\n    const resp =  await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return(gifs)\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // usamos : para renombrar\r\n        const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        <div className=\"card-grid\">\r\n            {loading && <p>Loading</p>}\r\n                {images.map(image =>{\r\n                    return(\r\n                    <GifGridItem \r\n                    key={image.id} \r\n                    {...image}/>\r\n                    )\r\n                })}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(images=>{\r\n            setState({\r\n                data:images,\r\n                loading:false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Full Metal Alchemist']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories, 'One Piece']);\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            \r\n\r\n\r\n            <ol>\r\n                { \r\n                    categories.map(category =>{\r\n                        return(\r\n                            <GifGrid \r\n                            category={category}\r\n                            key={category}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}